{"ast":null,"code":"import _objectSpread from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getDefaultState } from \"./mutation.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\";\n// CLASS\nexport var MutationObserver = /*#__PURE__*/function (_Subscribable) {\n  _inherits(MutationObserver, _Subscribable);\n  var _super = _createSuper(MutationObserver);\n  function MutationObserver(client, options) {\n    var _this;\n    _classCallCheck(this, MutationObserver);\n    _this = _super.call(this);\n    _this.client = client;\n    _this.setOptions(options);\n    _this.bindMethods();\n    _this.updateResult();\n    return _this;\n  }\n  _createClass(MutationObserver, [{\n    key: \"bindMethods\",\n    value: function bindMethods() {\n      this.mutate = this.mutate.bind(this);\n      this.reset = this.reset.bind(this);\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = this.client.defaultMutationOptions(options);\n    }\n  }, {\n    key: \"onUnsubscribe\",\n    value: function onUnsubscribe() {\n      if (!this.listeners.length) {\n        var _this$currentMutation;\n        (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n      }\n    }\n  }, {\n    key: \"onMutationUpdate\",\n    value: function onMutationUpdate(action) {\n      this.updateResult(); // Determine which callbacks to trigger\n\n      var notifyOptions = {\n        listeners: true\n      };\n      if (action.type === 'success') {\n        notifyOptions.onSuccess = true;\n      } else if (action.type === 'error') {\n        notifyOptions.onError = true;\n      }\n      this.notify(notifyOptions);\n    }\n  }, {\n    key: \"getCurrentResult\",\n    value: function getCurrentResult() {\n      return this.currentResult;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.currentMutation = undefined;\n      this.updateResult();\n      this.notify({\n        listeners: true\n      });\n    }\n  }, {\n    key: \"mutate\",\n    value: function mutate(variables, options) {\n      this.mutateOptions = options;\n      if (this.currentMutation) {\n        this.currentMutation.removeObserver(this);\n      }\n      this.currentMutation = this.client.getMutationCache().build(this.client, _objectSpread(_objectSpread({}, this.options), {}, {\n        variables: typeof variables !== 'undefined' ? variables : this.options.variables\n      }));\n      this.currentMutation.addObserver(this);\n      return this.currentMutation.execute();\n    }\n  }, {\n    key: \"updateResult\",\n    value: function updateResult() {\n      var state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n      var result = _objectSpread(_objectSpread({}, state), {}, {\n        isLoading: state.status === 'loading',\n        isSuccess: state.status === 'success',\n        isError: state.status === 'error',\n        isIdle: state.status === 'idle',\n        mutate: this.mutate,\n        reset: this.reset\n      });\n      this.currentResult = result;\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(options) {\n      var _this2 = this;\n      notifyManager.batch(function () {\n        // First trigger the mutate callbacks\n        if (_this2.mutateOptions) {\n          if (options.onSuccess) {\n            var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n            (_this$mutateOptions$o = (_this$mutateOptions = _this2.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, _this2.currentResult.data, _this2.currentResult.variables, _this2.currentResult.context);\n            (_this$mutateOptions$o2 = (_this$mutateOptions2 = _this2.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, _this2.currentResult.data, null, _this2.currentResult.variables, _this2.currentResult.context);\n          } else if (options.onError) {\n            var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n            (_this$mutateOptions$o3 = (_this$mutateOptions3 = _this2.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n            (_this$mutateOptions$o4 = (_this$mutateOptions4 = _this2.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, _this2.currentResult.error, _this2.currentResult.variables, _this2.currentResult.context);\n          }\n        } // Then trigger the listeners\n\n        if (options.listeners) {\n          _this2.listeners.forEach(function (listener) {\n            listener(_this2.currentResult);\n          });\n        }\n      });\n    }\n  }]);\n  return MutationObserver;\n}(Subscribable);","map":{"version":3,"names":["getDefaultState","notifyManager","Subscribable","MutationObserver","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","setOptions","bindMethods","updateResult","_createClass","key","value","mutate","bind","reset","defaultMutationOptions","onUnsubscribe","listeners","length","_this$currentMutation","currentMutation","removeObserver","onMutationUpdate","action","notifyOptions","type","onSuccess","onError","notify","getCurrentResult","currentResult","undefined","variables","mutateOptions","getMutationCache","build","_objectSpread","addObserver","execute","state","result","isLoading","status","isSuccess","isError","isIdle","_this2","batch","_this$mutateOptions$o","_this$mutateOptions","_this$mutateOptions$o2","_this$mutateOptions2","data","context","onSettled","_this$mutateOptions$o3","_this$mutateOptions3","_this$mutateOptions$o4","_this$mutateOptions4","error","forEach","listener"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/react-query/lib/core/mutationObserver.mjs"],"sourcesContent":["import { getDefaultState } from \"./mutation.mjs\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\";\n// CLASS\nexport class MutationObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.updateResult();\n  }\n\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  setOptions(options) {\n    this.options = this.client.defaultMutationOptions(options);\n  }\n\n  onUnsubscribe() {\n    if (!this.listeners.length) {\n      var _this$currentMutation;\n\n      (_this$currentMutation = this.currentMutation) == null ? void 0 : _this$currentMutation.removeObserver(this);\n    }\n  }\n\n  onMutationUpdate(action) {\n    this.updateResult(); // Determine which callbacks to trigger\n\n    const notifyOptions = {\n      listeners: true\n    };\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true;\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true;\n    }\n\n    this.notify(notifyOptions);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  reset() {\n    this.currentMutation = undefined;\n    this.updateResult();\n    this.notify({\n      listeners: true\n    });\n  }\n\n  mutate(variables, options) {\n    this.mutateOptions = options;\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this);\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, { ...this.options,\n      variables: typeof variables !== 'undefined' ? variables : this.options.variables\n    });\n    this.currentMutation.addObserver(this);\n    return this.currentMutation.execute();\n  }\n\n  updateResult() {\n    const state = this.currentMutation ? this.currentMutation.state : getDefaultState();\n    const result = { ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset\n    };\n    this.currentResult = result;\n  }\n\n  notify(options) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions) {\n        if (options.onSuccess) {\n          var _this$mutateOptions$o, _this$mutateOptions, _this$mutateOptions$o2, _this$mutateOptions2;\n\n          (_this$mutateOptions$o = (_this$mutateOptions = this.mutateOptions).onSuccess) == null ? void 0 : _this$mutateOptions$o.call(_this$mutateOptions, this.currentResult.data, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o2 = (_this$mutateOptions2 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o2.call(_this$mutateOptions2, this.currentResult.data, null, this.currentResult.variables, this.currentResult.context);\n        } else if (options.onError) {\n          var _this$mutateOptions$o3, _this$mutateOptions3, _this$mutateOptions$o4, _this$mutateOptions4;\n\n          (_this$mutateOptions$o3 = (_this$mutateOptions3 = this.mutateOptions).onError) == null ? void 0 : _this$mutateOptions$o3.call(_this$mutateOptions3, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n          (_this$mutateOptions$o4 = (_this$mutateOptions4 = this.mutateOptions).onSettled) == null ? void 0 : _this$mutateOptions$o4.call(_this$mutateOptions4, undefined, this.currentResult.error, this.currentResult.variables, this.currentResult.context);\n        }\n      } // Then trigger the listeners\n\n\n      if (options.listeners) {\n        this.listeners.forEach(listener => {\n          listener(this.currentResult);\n        });\n      }\n    });\n  }\n\n}"],"mappings":";;;;;AAAA,SAASA,eAAe,QAAQ,gBAAgB;AAChD,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,YAAY,QAAQ,oBAAoB;AACjD;AACA,WAAaC,gBAAgB,0BAAAC,aAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,aAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAC3B,SAAAA,iBAAYK,MAAM,EAAEC,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,gBAAA;IAC3BO,KAAA,GAAAJ,MAAA,CAAAM,IAAA;IACAF,KAAA,CAAKF,MAAM,GAAGA,MAAM;IACpBE,KAAA,CAAKG,UAAU,CAACJ,OAAO,CAAC;IACxBC,KAAA,CAAKI,WAAW,EAAE;IAClBJ,KAAA,CAAKK,YAAY,EAAE;IAAC,OAAAL,KAAA;EACtB;EAACM,YAAA,CAAAb,gBAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAJ,YAAA,EAAc;MACZ,IAAI,CAACK,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,IAAI,CAAC,IAAI,CAAC;MACpC,IAAI,CAACC,KAAK,GAAG,IAAI,CAACA,KAAK,CAACD,IAAI,CAAC,IAAI,CAAC;IACpC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAL,WAAWJ,OAAO,EAAE;MAClB,IAAI,CAACA,OAAO,GAAG,IAAI,CAACD,MAAM,CAACc,sBAAsB,CAACb,OAAO,CAAC;IAC5D;EAAC;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAK,cAAA,EAAgB;MACd,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,MAAM,EAAE;QAC1B,IAAIC,qBAAqB;QAEzB,CAACA,qBAAqB,GAAG,IAAI,CAACC,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,qBAAqB,CAACE,cAAc,CAAC,IAAI,CAAC;MAC9G;IACF;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAW,iBAAiBC,MAAM,EAAE;MACvB,IAAI,CAACf,YAAY,EAAE,CAAC,CAAC;;MAErB,IAAMgB,aAAa,GAAG;QACpBP,SAAS,EAAE;MACb,CAAC;MAED,IAAIM,MAAM,CAACE,IAAI,KAAK,SAAS,EAAE;QAC7BD,aAAa,CAACE,SAAS,GAAG,IAAI;MAChC,CAAC,MAAM,IAAIH,MAAM,CAACE,IAAI,KAAK,OAAO,EAAE;QAClCD,aAAa,CAACG,OAAO,GAAG,IAAI;MAC9B;MAEA,IAAI,CAACC,MAAM,CAACJ,aAAa,CAAC;IAC5B;EAAC;IAAAd,GAAA;IAAAC,KAAA,EAED,SAAAkB,iBAAA,EAAmB;MACjB,OAAO,IAAI,CAACC,aAAa;IAC3B;EAAC;IAAApB,GAAA;IAAAC,KAAA,EAED,SAAAG,MAAA,EAAQ;MACN,IAAI,CAACM,eAAe,GAAGW,SAAS;MAChC,IAAI,CAACvB,YAAY,EAAE;MACnB,IAAI,CAACoB,MAAM,CAAC;QACVX,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAOoB,SAAS,EAAE9B,OAAO,EAAE;MACzB,IAAI,CAAC+B,aAAa,GAAG/B,OAAO;MAE5B,IAAI,IAAI,CAACkB,eAAe,EAAE;QACxB,IAAI,CAACA,eAAe,CAACC,cAAc,CAAC,IAAI,CAAC;MAC3C;MAEA,IAAI,CAACD,eAAe,GAAG,IAAI,CAACnB,MAAM,CAACiC,gBAAgB,EAAE,CAACC,KAAK,CAAC,IAAI,CAAClC,MAAM,EAAAmC,aAAA,CAAAA,aAAA,KAAO,IAAI,CAAClC,OAAO;QACxF8B,SAAS,EAAE,OAAOA,SAAS,KAAK,WAAW,GAAGA,SAAS,GAAG,IAAI,CAAC9B,OAAO,CAAC8B;MAAS,GAChF;MACF,IAAI,CAACZ,eAAe,CAACiB,WAAW,CAAC,IAAI,CAAC;MACtC,OAAO,IAAI,CAACjB,eAAe,CAACkB,OAAO,EAAE;IACvC;EAAC;IAAA5B,GAAA;IAAAC,KAAA,EAED,SAAAH,aAAA,EAAe;MACb,IAAM+B,KAAK,GAAG,IAAI,CAACnB,eAAe,GAAG,IAAI,CAACA,eAAe,CAACmB,KAAK,GAAG9C,eAAe,EAAE;MACnF,IAAM+C,MAAM,GAAAJ,aAAA,CAAAA,aAAA,KAAQG,KAAK;QACvBE,SAAS,EAAEF,KAAK,CAACG,MAAM,KAAK,SAAS;QACrCC,SAAS,EAAEJ,KAAK,CAACG,MAAM,KAAK,SAAS;QACrCE,OAAO,EAAEL,KAAK,CAACG,MAAM,KAAK,OAAO;QACjCG,MAAM,EAAEN,KAAK,CAACG,MAAM,KAAK,MAAM;QAC/B9B,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBE,KAAK,EAAE,IAAI,CAACA;MAAK,EAClB;MACD,IAAI,CAACgB,aAAa,GAAGU,MAAM;IAC7B;EAAC;IAAA9B,GAAA;IAAAC,KAAA,EAED,SAAAiB,OAAO1B,OAAO,EAAE;MAAA,IAAA4C,MAAA;MACdpD,aAAa,CAACqD,KAAK,CAAC,YAAM;QACxB;QACA,IAAID,MAAI,CAACb,aAAa,EAAE;UACtB,IAAI/B,OAAO,CAACwB,SAAS,EAAE;YACrB,IAAIsB,qBAAqB,EAAEC,mBAAmB,EAAEC,sBAAsB,EAAEC,oBAAoB;YAE5F,CAACH,qBAAqB,GAAG,CAACC,mBAAmB,GAAGH,MAAI,CAACb,aAAa,EAAEP,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGsB,qBAAqB,CAAC3C,IAAI,CAAC4C,mBAAmB,EAAEH,MAAI,CAAChB,aAAa,CAACsB,IAAI,EAAEN,MAAI,CAAChB,aAAa,CAACE,SAAS,EAAEc,MAAI,CAAChB,aAAa,CAACuB,OAAO,CAAC;YACpO,CAACH,sBAAsB,GAAG,CAACC,oBAAoB,GAAGL,MAAI,CAACb,aAAa,EAAEqB,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGJ,sBAAsB,CAAC7C,IAAI,CAAC8C,oBAAoB,EAAEL,MAAI,CAAChB,aAAa,CAACsB,IAAI,EAAE,IAAI,EAAEN,MAAI,CAAChB,aAAa,CAACE,SAAS,EAAEc,MAAI,CAAChB,aAAa,CAACuB,OAAO,CAAC;UAChP,CAAC,MAAM,IAAInD,OAAO,CAACyB,OAAO,EAAE;YAC1B,IAAI4B,sBAAsB,EAAEC,oBAAoB,EAAEC,sBAAsB,EAAEC,oBAAoB;YAE9F,CAACH,sBAAsB,GAAG,CAACC,oBAAoB,GAAGV,MAAI,CAACb,aAAa,EAAEN,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG4B,sBAAsB,CAAClD,IAAI,CAACmD,oBAAoB,EAAEV,MAAI,CAAChB,aAAa,CAAC6B,KAAK,EAAEb,MAAI,CAAChB,aAAa,CAACE,SAAS,EAAEc,MAAI,CAAChB,aAAa,CAACuB,OAAO,CAAC;YACvO,CAACI,sBAAsB,GAAG,CAACC,oBAAoB,GAAGZ,MAAI,CAACb,aAAa,EAAEqB,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGG,sBAAsB,CAACpD,IAAI,CAACqD,oBAAoB,EAAE3B,SAAS,EAAEe,MAAI,CAAChB,aAAa,CAAC6B,KAAK,EAAEb,MAAI,CAAChB,aAAa,CAACE,SAAS,EAAEc,MAAI,CAAChB,aAAa,CAACuB,OAAO,CAAC;UACtP;QACF,CAAC,CAAC;;QAGF,IAAInD,OAAO,CAACe,SAAS,EAAE;UACrB6B,MAAI,CAAC7B,SAAS,CAAC2C,OAAO,CAAC,UAAAC,QAAQ,EAAI;YACjCA,QAAQ,CAACf,MAAI,CAAChB,aAAa,CAAC;UAC9B,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAlC,gBAAA;AAAA,EAzGmCD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}