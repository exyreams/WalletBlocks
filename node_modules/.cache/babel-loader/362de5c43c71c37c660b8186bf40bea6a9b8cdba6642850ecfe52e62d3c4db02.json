{"ast":null,"code":"import _classCallCheck from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport var MutationCache = /*#__PURE__*/function (_Subscribable) {\n  _inherits(MutationCache, _Subscribable);\n  var _super = _createSuper(MutationCache);\n  function MutationCache(config) {\n    var _this;\n    _classCallCheck(this, MutationCache);\n    _this = _super.call(this);\n    _this.config = config || {};\n    _this.mutations = [];\n    _this.mutationId = 0;\n    return _this;\n  }\n  _createClass(MutationCache, [{\n    key: \"build\",\n    value: function build(client, options, state) {\n      var mutation = new Mutation({\n        mutationCache: this,\n        logger: client.getLogger(),\n        mutationId: ++this.mutationId,\n        options: client.defaultMutationOptions(options),\n        state: state,\n        defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n        meta: options.meta\n      });\n      this.add(mutation);\n      return mutation;\n    }\n  }, {\n    key: \"add\",\n    value: function add(mutation) {\n      this.mutations.push(mutation);\n      this.notify({\n        type: 'added',\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(mutation) {\n      this.mutations = this.mutations.filter(function (x) {\n        return x !== mutation;\n      });\n      this.notify({\n        type: 'removed',\n        mutation: mutation\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this2 = this;\n      notifyManager.batch(function () {\n        _this2.mutations.forEach(function (mutation) {\n          _this2.remove(mutation);\n        });\n      });\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.mutations;\n    }\n  }, {\n    key: \"find\",\n    value: function find(filters) {\n      if (typeof filters.exact === 'undefined') {\n        filters.exact = true;\n      }\n      return this.mutations.find(function (mutation) {\n        return matchMutation(filters, mutation);\n      });\n    }\n  }, {\n    key: \"findAll\",\n    value: function findAll(filters) {\n      return this.mutations.filter(function (mutation) {\n        return matchMutation(filters, mutation);\n      });\n    }\n  }, {\n    key: \"notify\",\n    value: function notify(event) {\n      var _this3 = this;\n      notifyManager.batch(function () {\n        _this3.listeners.forEach(function (listener) {\n          listener(event);\n        });\n      });\n    }\n  }, {\n    key: \"resumePausedMutations\",\n    value: function resumePausedMutations() {\n      var pausedMutations = this.mutations.filter(function (x) {\n        return x.state.isPaused;\n      });\n      return notifyManager.batch(function () {\n        return pausedMutations.reduce(function (promise, mutation) {\n          return promise.then(function () {\n            return mutation.continue().catch(noop);\n          });\n        }, Promise.resolve());\n      });\n    }\n  }]);\n  return MutationCache;\n}(Subscribable);","map":{"version":3,"names":["notifyManager","Mutation","matchMutation","noop","Subscribable","MutationCache","_Subscribable","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","mutations","mutationId","_createClass","key","value","build","client","options","state","mutation","mutationCache","logger","getLogger","defaultMutationOptions","defaultOptions","mutationKey","getMutationDefaults","undefined","meta","add","push","notify","type","remove","filter","x","clear","_this2","batch","forEach","getAll","find","filters","exact","findAll","event","_this3","listeners","listener","resumePausedMutations","pausedMutations","isPaused","reduce","promise","then","continue","catch","Promise","resolve"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/react-query/lib/core/mutationCache.mjs"],"sourcesContent":["import { notifyManager } from \"./notifyManager.mjs\";\nimport { Mutation } from \"./mutation.mjs\";\nimport { matchMutation, noop } from \"./utils.mjs\";\nimport { Subscribable } from \"./subscribable.mjs\"; // TYPES\n\n// CLASS\nexport class MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined,\n      meta: options.meta\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n    return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n  }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}