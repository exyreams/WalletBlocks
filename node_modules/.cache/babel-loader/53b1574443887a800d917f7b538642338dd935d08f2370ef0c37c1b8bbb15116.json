{"ast":null,"code":"import _objectSpread from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nexport var removeOldestQuery = function removeOldestQuery(_ref) {\n  var persistedClient = _ref.persistedClient;\n  var mutations = _toConsumableArray(persistedClient.clientState.mutations);\n  var queries = _toConsumableArray(persistedClient.clientState.queries);\n  var client = _objectSpread(_objectSpread({}, persistedClient), {}, {\n    clientState: {\n      mutations: mutations,\n      queries: queries\n    }\n  }); // sort queries by dataUpdatedAt (oldest first)\n\n  var sortedQueries = _toConsumableArray(queries).sort(function (a, b) {\n    return a.state.dataUpdatedAt - b.state.dataUpdatedAt;\n  }); // clean oldest query\n\n  if (sortedQueries.length > 0) {\n    var oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(function (q) {\n      return q !== oldestData;\n    });\n    return client;\n  }\n  return undefined;\n};","map":{"version":3,"names":["removeOldestQuery","_ref","persistedClient","mutations","_toConsumableArray","clientState","queries","client","_objectSpread","sortedQueries","sort","a","b","state","dataUpdatedAt","length","oldestData","shift","filter","q","undefined"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/react-query/lib/persistQueryClient/retryStrategies.mjs"],"sourcesContent":["export const removeOldestQuery = ({\n  persistedClient\n}) => {\n  const mutations = [...persistedClient.clientState.mutations];\n  const queries = [...persistedClient.clientState.queries];\n  const client = { ...persistedClient,\n    clientState: {\n      mutations,\n      queries\n    }\n  }; // sort queries by dataUpdatedAt (oldest first)\n\n  const sortedQueries = [...queries].sort((a, b) => a.state.dataUpdatedAt - b.state.dataUpdatedAt); // clean oldest query\n\n  if (sortedQueries.length > 0) {\n    const oldestData = sortedQueries.shift();\n    client.clientState.queries = queries.filter(q => q !== oldestData);\n    return client;\n  }\n\n  return undefined;\n};"],"mappings":";;AAAA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAExB;EAAA,IADJC,eAAe,GAAAD,IAAA,CAAfC,eAAe;EAEf,IAAMC,SAAS,GAAAC,kBAAA,CAAOF,eAAe,CAACG,WAAW,CAACF,SAAS,CAAC;EAC5D,IAAMG,OAAO,GAAAF,kBAAA,CAAOF,eAAe,CAACG,WAAW,CAACC,OAAO,CAAC;EACxD,IAAMC,MAAM,GAAAC,aAAA,CAAAA,aAAA,KAAQN,eAAe;IACjCG,WAAW,EAAE;MACXF,SAAS,EAATA,SAAS;MACTG,OAAO,EAAPA;IACF;EAAC,EACF,CAAC,CAAC;;EAEH,IAAMG,aAAa,GAAGL,kBAAA,CAAIE,OAAO,EAAEI,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,CAACE,KAAK,CAACC,aAAa,GAAGF,CAAC,CAACC,KAAK,CAACC,aAAa;EAAA,EAAC,CAAC,CAAC;;EAElG,IAAIL,aAAa,CAACM,MAAM,GAAG,CAAC,EAAE;IAC5B,IAAMC,UAAU,GAAGP,aAAa,CAACQ,KAAK,EAAE;IACxCV,MAAM,CAACF,WAAW,CAACC,OAAO,GAAGA,OAAO,CAACY,MAAM,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,KAAKH,UAAU;IAAA,EAAC;IAClE,OAAOT,MAAM;EACf;EAEA,OAAOa,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}