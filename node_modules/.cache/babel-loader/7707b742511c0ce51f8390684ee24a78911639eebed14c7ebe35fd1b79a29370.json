{"ast":null,"code":"var _regeneratorRuntime = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nmodule.exports = getBlocksForRange;\nfunction getBlocksForRange(_x) {\n  return _getBlocksForRange.apply(this, arguments);\n}\nfunction _getBlocksForRange() {\n  _getBlocksForRange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n    var provider, fromBlock, toBlock, fromBlockNumber, toBlockNumber, blockCountToQuery, missingBlockNumbers, blockBodies;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          provider = _ref.provider, fromBlock = _ref.fromBlock, toBlock = _ref.toBlock;\n          if (!fromBlock) fromBlock = toBlock;\n          fromBlockNumber = hexToInt(fromBlock);\n          toBlockNumber = hexToInt(toBlock);\n          blockCountToQuery = toBlockNumber - fromBlockNumber + 1; // load all blocks from old to new (inclusive)\n          missingBlockNumbers = Array(blockCountToQuery).fill().map(function (_, index) {\n            return fromBlockNumber + index;\n          }).map(intToHex);\n          _context.next = 8;\n          return Promise.all(missingBlockNumbers.map(function (blockNum) {\n            return query(provider, 'eth_getBlockByNumber', [blockNum, false]);\n          }));\n        case 8:\n          blockBodies = _context.sent;\n          return _context.abrupt(\"return\", blockBodies);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _getBlocksForRange.apply(this, arguments);\n}\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  return Number.parseInt(hexString, 16);\n}\nfunction incrementHexInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  var value = hexToInt(hexString);\n  return intToHex(value + 1);\n}\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int;\n  var hexString = int.toString(16);\n  return '0x' + hexString;\n}\nfunction sendAsync(provider, request) {\n  return new Promise(function (resolve, reject) {\n    provider.sendAsync(request, function (error, response) {\n      if (error) {\n        reject(error);\n      } else if (response.error) {\n        reject(response.error);\n      } else if (response.result) {\n        resolve(response.result);\n      } else {\n        reject(new Error(\"Result was empty\"));\n      }\n    });\n  });\n}\nfunction query(_x2, _x3, _x4) {\n  return _query.apply(this, arguments);\n}\nfunction _query() {\n  _query = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provider, method, params) {\n    var i;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          i = 0;\n        case 1:\n          if (!(i < 3)) {\n            _context2.next = 14;\n            break;\n          }\n          _context2.prev = 2;\n          _context2.next = 5;\n          return sendAsync(provider, {\n            id: 1,\n            jsonrpc: \"2.0\",\n            method: method,\n            params: params\n          });\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error(\"provider.sendAsync failed: \".concat(_context2.t0.stack || _context2.t0.message || _context2.t0));\n        case 11:\n          i++;\n          _context2.next = 1;\n          break;\n        case 14:\n          throw new Error(\"Block not found for params: \".concat(JSON.stringify(params)));\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[2, 8]]);\n  }));\n  return _query.apply(this, arguments);\n}","map":{"version":3,"names":["module","exports","getBlocksForRange","_x","_getBlocksForRange","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","provider","fromBlock","toBlock","fromBlockNumber","toBlockNumber","blockCountToQuery","missingBlockNumbers","blockBodies","wrap","_callee$","_context","prev","next","hexToInt","Array","fill","map","_","index","intToHex","Promise","all","blockNum","query","sent","abrupt","stop","hexString","undefined","Number","parseInt","incrementHexInt","value","int","toString","sendAsync","request","resolve","reject","error","response","result","Error","_x2","_x3","_x4","_query","_callee2","method","params","i","_callee2$","_context2","id","jsonrpc","t0","console","concat","stack","message","JSON","stringify"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/eth-json-rpc-filters/getBlocksForRange.js"],"sourcesContent":["module.exports = getBlocksForRange\n\nasync function getBlocksForRange({ provider, fromBlock, toBlock }) {\n  if (!fromBlock) fromBlock = toBlock\n\n  const fromBlockNumber = hexToInt(fromBlock)\n  const toBlockNumber = hexToInt(toBlock)\n  const blockCountToQuery = toBlockNumber - fromBlockNumber + 1\n  // load all blocks from old to new (inclusive)\n  const missingBlockNumbers = Array(blockCountToQuery).fill()\n                              .map((_,index) => fromBlockNumber + index)\n                              .map(intToHex)\n  const blockBodies = await Promise.all(\n    missingBlockNumbers.map(blockNum => query(provider, 'eth_getBlockByNumber', [blockNum, false]))\n  )\n  return blockBodies\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  const hexString = int.toString(16)\n  return '0x' + hexString\n}\n\nfunction sendAsync(provider, request) {\n  return new Promise((resolve, reject) => {\n    provider.sendAsync(request, (error, response) => {\n      if (error) {\n        reject(error);\n      } else if (response.error) {\n        reject(response.error);\n      } else if (response.result) {\n        resolve(response.result);\n      } else {\n        reject(new Error(\"Result was empty\"));\n      }\n    });\n  });\n}\n\nasync function query(provider, method, params) {\n  for (let i = 0; i < 3; i++) {\n    try {\n      return await sendAsync(provider, {\n        id: 1,\n        jsonrpc: \"2.0\",\n        method,\n        params,\n      });\n    } catch (error) {\n      console.error(\n        `provider.sendAsync failed: ${error.stack || error.message || error}`\n      );\n    }\n  }\n  throw new Error(`Block not found for params: ${JSON.stringify(params)}`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}