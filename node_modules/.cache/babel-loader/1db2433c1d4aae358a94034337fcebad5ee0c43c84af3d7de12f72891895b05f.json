{"ast":null,"code":"import _slicedToArray from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty2 from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regeneratorRuntime from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { e as Connector, m as _classPrivateMethodInitSpec, _ as _defineProperty, j as _classPrivateFieldInitSpec, n as normalizeChainId, o as _classPrivateMethodGet, U as UserRejectedRequestError, k as _classPrivateFieldGet, l as _classPrivateFieldSet, i as SwitchChainError } from '../../../dist/base-f1bbf263.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { g as getClient } from '../../../dist/client-fbdcbdb2.esm.js';\nimport 'eventemitter3';\nimport '../../../dist/chains-174cf4b4.esm.js';\nimport '../../../dist/rpcs-b73a8f60.esm.js';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n */\n\nvar switchChainAllowedRegex = /(imtoken|metamask|rainbow)/i;\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _switchChain = /*#__PURE__*/new WeakSet();\nvar WalletConnectConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(WalletConnectConnector, _Connector);\n  var _super = _createSuper(WalletConnectConnector);\n  function WalletConnectConnector(config) {\n    var _this;\n    _classCallCheck(this, WalletConnectConnector);\n    _this = _super.call(this, config);\n    _classPrivateMethodInitSpec(_assertThisInitialized(_this), _switchChain);\n    _defineProperty(_assertThisInitialized(_this), \"id\", 'walletConnect');\n    _defineProperty(_assertThisInitialized(_this), \"name\", 'WalletConnect');\n    _defineProperty(_assertThisInitialized(_this), \"ready\", true);\n    _classPrivateFieldInitSpec(_assertThisInitialized(_this), _provider, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onAccountsChanged\", function (accounts) {\n      if (accounts.length === 0) _this.emit('disconnect');else _this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onChainChanged\", function (chainId) {\n      var id = normalizeChainId(chainId);\n      var unsupported = _this.isChainUnsupported(id);\n      _this.emit('change', {\n        chain: {\n          id: id,\n          unsupported: unsupported\n        }\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onDisconnect\", function () {\n      _this.emit('disconnect');\n    });\n    return _this;\n  }\n  _createClass(WalletConnectConnector, [{\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        var _ref,\n          chainId,\n          _provider$connector$p,\n          _provider$connector,\n          _provider$connector$p2,\n          targetChainId,\n          lastUsedChainId,\n          provider,\n          accounts,\n          account,\n          id,\n          unsupported,\n          walletName,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, chainId = _ref.chainId;\n              _context.prev = 1;\n              targetChainId = chainId;\n              if (!targetChainId) {\n                lastUsedChainId = getClient().lastUsedChainId;\n                if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n              }\n              _context.next = 6;\n              return this.getProvider({\n                chainId: targetChainId,\n                create: true\n              });\n            case 6:\n              provider = _context.sent;\n              provider.on('accountsChanged', this.onAccountsChanged);\n              provider.on('chainChanged', this.onChainChanged);\n              provider.on('disconnect', this.onDisconnect); // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n\n              setTimeout(function () {\n                return _this2.emit('message', {\n                  type: 'connecting'\n                });\n              }, 0);\n              _context.next = 13;\n              return provider.enable();\n            case 13:\n              accounts = _context.sent;\n              account = getAddress(accounts[0]);\n              _context.next = 17;\n              return this.getChainId();\n            case 17:\n              id = _context.sent;\n              unsupported = this.isChainUnsupported(id); // Not all WalletConnect options support programmatic chain switching\n              // Only enable for wallet options that do\n              walletName = (_provider$connector$p = (_provider$connector = provider.connector) === null || _provider$connector === void 0 ? void 0 : (_provider$connector$p2 = _provider$connector.peerMeta) === null || _provider$connector$p2 === void 0 ? void 0 : _provider$connector$p2.name) !== null && _provider$connector$p !== void 0 ? _provider$connector$p : '';\n              if (switchChainAllowedRegex.test(walletName)) this.switchChain = _classPrivateMethodGet(this, _switchChain, _switchChain2);\n              return _context.abrupt(\"return\", {\n                account: account,\n                chain: {\n                  id: id,\n                  unsupported: unsupported\n                },\n                provider: new providers.Web3Provider(provider)\n              });\n            case 24:\n              _context.prev = 24;\n              _context.t0 = _context[\"catch\"](1);\n              if (!/user closed modal/i.test(_context.t0.message)) {\n                _context.next = 28;\n                break;\n              }\n              throw new UserRejectedRequestError(_context.t0);\n            case 28:\n              throw _context.t0;\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[1, 24]]);\n      }));\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context2.sent;\n              _context2.next = 5;\n              return provider.disconnect();\n            case 5:\n              provider.removeListener('accountsChanged', this.onAccountsChanged);\n              provider.removeListener('chainChanged', this.onChainChanged);\n              provider.removeListener('disconnect', this.onDisconnect);\n              typeof localStorage !== 'undefined' && localStorage.removeItem('walletconnect');\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n      return disconnect;\n    }()\n  }, {\n    key: \"getAccount\",\n    value: function () {\n      var _getAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var provider, accounts;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context3.sent;\n              accounts = provider.accounts; // return checksum address\n              return _context3.abrupt(\"return\", getAddress(accounts[0]));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getAccount() {\n        return _getAccount.apply(this, arguments);\n      }\n      return getAccount;\n    }()\n  }, {\n    key: \"getChainId\",\n    value: function () {\n      var _getChainId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var provider, chainId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.getProvider();\n            case 2:\n              provider = _context4.sent;\n              chainId = normalizeChainId(provider.chainId);\n              return _context4.abrupt(\"return\", chainId);\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getChainId() {\n        return _getChainId.apply(this, arguments);\n      }\n      return getChainId;\n    }()\n  }, {\n    key: \"getProvider\",\n    value: function () {\n      var _getProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _ref2,\n          chainId,\n          create,\n          _this$options,\n          _this$options2,\n          rpc,\n          WalletConnectProvider,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _ref2 = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : {}, chainId = _ref2.chainId, create = _ref2.create; // Force create new provider\n              if (!(!_classPrivateFieldGet(this, _provider) || chainId || create)) {\n                _context5.next = 7;\n                break;\n              }\n              rpc = !((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.infuraId) ? this.chains.reduce(function (rpc, chain) {\n                return _objectSpread(_objectSpread({}, rpc), {}, _defineProperty2({}, chain.id, chain.rpcUrls.default));\n              }, {}) : {};\n              _context5.next = 5;\n              return import('@walletconnect/ethereum-provider');\n            case 5:\n              WalletConnectProvider = _context5.sent.default;\n              _classPrivateFieldSet(this, _provider, new WalletConnectProvider(_objectSpread(_objectSpread({}, this.options), {}, {\n                chainId: chainId,\n                rpc: _objectSpread(_objectSpread({}, rpc), (_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.rpc)\n              })));\n            case 7:\n              return _context5.abrupt(\"return\", _classPrivateFieldGet(this, _provider));\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getProvider() {\n        return _getProvider.apply(this, arguments);\n      }\n      return getProvider;\n    }()\n  }, {\n    key: \"getSigner\",\n    value: function () {\n      var _getSigner = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var _ref3,\n          chainId,\n          _yield$Promise$all,\n          _yield$Promise$all2,\n          provider,\n          account,\n          _args6 = arguments;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _ref3 = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, chainId = _ref3.chainId;\n              _context6.next = 3;\n              return Promise.all([this.getProvider({\n                chainId: chainId\n              }), this.getAccount()]);\n            case 3:\n              _yield$Promise$all = _context6.sent;\n              _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n              provider = _yield$Promise$all2[0];\n              account = _yield$Promise$all2[1];\n              return _context6.abrupt(\"return\", new providers.Web3Provider(provider).getSigner(account));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getSigner() {\n        return _getSigner.apply(this, arguments);\n      }\n      return getSigner;\n    }()\n  }, {\n    key: \"isAuthorized\",\n    value: function () {\n      var _isAuthorized = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var account;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this.getAccount();\n            case 3:\n              account = _context7.sent;\n              return _context7.abrupt(\"return\", !!account);\n            case 7:\n              _context7.prev = 7;\n              _context7.t0 = _context7[\"catch\"](0);\n              return _context7.abrupt(\"return\", false);\n            case 10:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n      function isAuthorized() {\n        return _isAuthorized.apply(this, arguments);\n      }\n      return isAuthorized;\n    }()\n  }]);\n  return WalletConnectConnector;\n}(Connector);\nfunction _switchChain2(_x) {\n  return _switchChain3.apply(this, arguments);\n}\nfunction _switchChain3() {\n  _switchChain3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(chainId) {\n    var provider, id, _this$chains$find, message;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return this.getProvider();\n        case 2:\n          provider = _context8.sent;\n          id = hexValue(chainId);\n          _context8.prev = 4;\n          _context8.next = 7;\n          return provider.request({\n            method: 'wallet_switchEthereumChain',\n            params: [{\n              chainId: id\n            }]\n          });\n        case 7:\n          return _context8.abrupt(\"return\", (_this$chains$find = this.chains.find(function (x) {\n            return x.id === chainId;\n          })) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n            id: chainId,\n            name: \"Chain \".concat(id),\n            network: \"\".concat(id),\n            rpcUrls: {\n              default: ''\n            }\n          });\n        case 10:\n          _context8.prev = 10;\n          _context8.t0 = _context8[\"catch\"](4);\n          message = typeof _context8.t0 === 'string' ? _context8.t0 : _context8.t0 === null || _context8.t0 === void 0 ? void 0 : _context8.t0.message;\n          if (!/user rejected request/i.test(message)) {\n            _context8.next = 15;\n            break;\n          }\n          throw new UserRejectedRequestError(_context8.t0);\n        case 15:\n          throw new SwitchChainError(_context8.t0);\n        case 16:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8, this, [[4, 10]]);\n  }));\n  return _switchChain3.apply(this, arguments);\n}\nexport { WalletConnectConnector };","map":{"version":3,"names":["e","Connector","m","_classPrivateMethodInitSpec","_","_defineProperty","j","_classPrivateFieldInitSpec","n","normalizeChainId","o","_classPrivateMethodGet","U","UserRejectedRequestError","k","_classPrivateFieldGet","l","_classPrivateFieldSet","i","SwitchChainError","providers","getAddress","hexValue","g","getClient","switchChainAllowedRegex","_provider","WeakMap","_switchChain","WeakSet","WalletConnectConnector","_Connector","_inherits","_super","_createSuper","config","_this","_classCallCheck","call","_assertThisInitialized","writable","value","accounts","length","emit","account","chainId","id","unsupported","isChainUnsupported","chain","_createClass","key","_connect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","_ref","_provider$connector$p","_provider$connector","_provider$connector$p2","targetChainId","lastUsedChainId","provider","walletName","_args","arguments","wrap","_callee$","_context","prev","next","undefined","getProvider","create","sent","on","onAccountsChanged","onChainChanged","onDisconnect","setTimeout","type","enable","getChainId","connector","peerMeta","name","test","switchChain","_switchChain2","abrupt","Web3Provider","t0","message","stop","connect","apply","_disconnect","_callee2","_callee2$","_context2","disconnect","removeListener","localStorage","removeItem","_getAccount","_callee3","_callee3$","_context3","getAccount","_getChainId","_callee4","_callee4$","_context4","_getProvider","_callee5","_ref2","_this$options","_this$options2","rpc","WalletConnectProvider","_args5","_callee5$","_context5","options","infuraId","chains","reduce","_objectSpread","_defineProperty2","rpcUrls","default","_getSigner","_callee6","_ref3","_yield$Promise$all","_yield$Promise$all2","_args6","_callee6$","_context6","Promise","all","_slicedToArray","getSigner","_isAuthorized","_callee7","_callee7$","_context7","isAuthorized","_x","_switchChain3","_callee8","_this$chains$find","_callee8$","_context8","request","method","params","find","x","concat","network"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/@wagmi/core/connectors/walletConnect/dist/wagmi-core-connectors-walletConnect.esm.js"],"sourcesContent":["import { e as Connector, m as _classPrivateMethodInitSpec, _ as _defineProperty, j as _classPrivateFieldInitSpec, n as normalizeChainId, o as _classPrivateMethodGet, U as UserRejectedRequestError, k as _classPrivateFieldGet, l as _classPrivateFieldSet, i as SwitchChainError } from '../../../dist/base-f1bbf263.esm.js';\nimport { providers } from 'ethers';\nimport { getAddress, hexValue } from 'ethers/lib/utils';\nimport { g as getClient } from '../../../dist/client-fbdcbdb2.esm.js';\nimport 'eventemitter3';\nimport '../../../dist/chains-174cf4b4.esm.js';\nimport '../../../dist/rpcs-b73a8f60.esm.js';\nimport 'zustand/vanilla';\nimport 'zustand/middleware';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n */\n\nconst switchChainAllowedRegex = /(imtoken|metamask|rainbow)/i;\n\nvar _provider = /*#__PURE__*/new WeakMap();\n\nvar _switchChain = /*#__PURE__*/new WeakSet();\n\nclass WalletConnectConnector extends Connector {\n  constructor(config) {\n    super(config);\n\n    _classPrivateMethodInitSpec(this, _switchChain);\n\n    _defineProperty(this, \"id\", 'walletConnect');\n\n    _defineProperty(this, \"name\", 'WalletConnect');\n\n    _defineProperty(this, \"ready\", true);\n\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) this.emit('disconnect');else this.emit('change', {\n        account: getAddress(accounts[0])\n      });\n    });\n\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      this.emit('change', {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n\n    _defineProperty(this, \"onDisconnect\", () => {\n      this.emit('disconnect');\n    });\n  }\n\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    try {\n      var _provider$connector$p, _provider$connector, _provider$connector$p2;\n\n      let targetChainId = chainId;\n\n      if (!targetChainId) {\n        const lastUsedChainId = getClient().lastUsedChainId;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) targetChainId = lastUsedChainId;\n      }\n\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      provider.on('accountsChanged', this.onAccountsChanged);\n      provider.on('chainChanged', this.onChainChanged);\n      provider.on('disconnect', this.onDisconnect); // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n\n      setTimeout(() => this.emit('message', {\n        type: 'connecting'\n      }), 0);\n      const accounts = await provider.enable();\n      const account = getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id); // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n\n      const walletName = (_provider$connector$p = (_provider$connector = provider.connector) === null || _provider$connector === void 0 ? void 0 : (_provider$connector$p2 = _provider$connector.peerMeta) === null || _provider$connector$p2 === void 0 ? void 0 : _provider$connector$p2.name) !== null && _provider$connector$p !== void 0 ? _provider$connector$p : '';\n      if (switchChainAllowedRegex.test(walletName)) this.switchChain = _classPrivateMethodGet(this, _switchChain, _switchChain2);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) throw new UserRejectedRequestError(error);\n      throw error;\n    }\n  }\n\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n    provider.removeListener('accountsChanged', this.onAccountsChanged);\n    provider.removeListener('chainChanged', this.onChainChanged);\n    provider.removeListener('disconnect', this.onDisconnect);\n    typeof localStorage !== 'undefined' && localStorage.removeItem('walletconnect');\n  }\n\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts; // return checksum address\n\n    return getAddress(accounts[0]);\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    // Force create new provider\n    if (!_classPrivateFieldGet(this, _provider) || chainId || create) {\n      var _this$options, _this$options2;\n\n      const rpc = !((_this$options = this.options) !== null && _this$options !== void 0 && _this$options.infuraId) ? this.chains.reduce((rpc, chain) => ({ ...rpc,\n        [chain.id]: chain.rpcUrls.default\n      }), {}) : {};\n      const WalletConnectProvider = (await import('@walletconnect/ethereum-provider')).default;\n\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({ ...this.options,\n        chainId,\n        rpc: { ...rpc,\n          ...((_this$options2 = this.options) === null || _this$options2 === void 0 ? void 0 : _this$options2.rpc)\n        }\n      }));\n    }\n\n    return _classPrivateFieldGet(this, _provider);\n  }\n\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider).getSigner(account);\n  }\n\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n\n}\n\nasync function _switchChain2(chainId) {\n  const provider = await this.getProvider();\n  const id = hexValue(chainId);\n\n  try {\n    var _this$chains$find;\n\n    await provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{\n        chainId: id\n      }]\n    });\n    return (_this$chains$find = this.chains.find(x => x.id === chainId)) !== null && _this$chains$find !== void 0 ? _this$chains$find : {\n      id: chainId,\n      name: \"Chain \".concat(id),\n      network: \"\".concat(id),\n      rpcUrls: {\n        default: ''\n      }\n    };\n  } catch (error) {\n    const message = typeof error === 'string' ? error : error === null || error === void 0 ? void 0 : error.message;\n    if (/user rejected request/i.test(message)) throw new UserRejectedRequestError(error);\n    throw new SwitchChainError(error);\n  }\n}\n\nexport { WalletConnectConnector };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}