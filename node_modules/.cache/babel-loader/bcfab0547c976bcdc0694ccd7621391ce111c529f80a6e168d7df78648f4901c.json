{"ast":null,"code":"import _slicedToArray from \"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/notifyManager.mjs\";\nimport { parseMutationFilterArgs } from \"../core/utils.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useIsMutating(arg1, arg2, arg3) {\n  var _parseMutationFilterA = parseMutationFilterArgs(arg1, arg2, arg3),\n    _parseMutationFilterA2 = _slicedToArray(_parseMutationFilterA, 2),\n    filters = _parseMutationFilterA2[0],\n    _parseMutationFilterA3 = _parseMutationFilterA2[1],\n    options = _parseMutationFilterA3 === void 0 ? {} : _parseMutationFilterA3;\n  var queryClient = useQueryClient({\n    context: options.context\n  });\n  var queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore(React.useCallback(function (onStoreChange) {\n    return queryCache.subscribe(notifyManager.batchCalls(onStoreChange));\n  }, [queryCache]), function () {\n    return queryClient.isMutating(filters);\n  }, function () {\n    return queryClient.isMutating(filters);\n  });\n}","map":{"version":3,"names":["React","useSyncExternalStore","notifyManager","parseMutationFilterArgs","useQueryClient","useIsMutating","arg1","arg2","arg3","_parseMutationFilterA","_parseMutationFilterA2","_slicedToArray","filters","_parseMutationFilterA3","options","queryClient","context","queryCache","getQueryCache","useCallback","onStoreChange","subscribe","batchCalls","isMutating"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/react-query/lib/reactjs/useIsMutating.mjs"],"sourcesContent":["import React from 'react';\nimport { useSyncExternalStore } from \"./useSyncExternalStore.mjs\";\nimport { notifyManager } from \"../core/notifyManager.mjs\";\nimport { parseMutationFilterArgs } from \"../core/utils.mjs\";\nimport { useQueryClient } from \"./QueryClientProvider.mjs\";\nexport function useIsMutating(arg1, arg2, arg3) {\n  const [filters, options = {}] = parseMutationFilterArgs(arg1, arg2, arg3);\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const queryCache = queryClient.getQueryCache();\n  return useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => queryClient.isMutating(filters), () => queryClient.isMutating(filters));\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,4BAA4B;AACjE,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,uBAAuB,QAAQ,mBAAmB;AAC3D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC9C,IAAAC,qBAAA,GAAgCN,uBAAuB,CAACG,IAAI,EAAEC,IAAI,EAAEC,IAAI,CAAC;IAAAE,sBAAA,GAAAC,cAAA,CAAAF,qBAAA;IAAlEG,OAAO,GAAAF,sBAAA;IAAAG,sBAAA,GAAAH,sBAAA;IAAEI,OAAO,GAAAD,sBAAA,cAAG,CAAC,CAAC,GAAAA,sBAAA;EAC5B,IAAME,WAAW,GAAGX,cAAc,CAAC;IACjCY,OAAO,EAAEF,OAAO,CAACE;EACnB,CAAC,CAAC;EACF,IAAMC,UAAU,GAAGF,WAAW,CAACG,aAAa,EAAE;EAC9C,OAAOjB,oBAAoB,CAACD,KAAK,CAACmB,WAAW,CAAC,UAAAC,aAAa;IAAA,OAAIH,UAAU,CAACI,SAAS,CAACnB,aAAa,CAACoB,UAAU,CAACF,aAAa,CAAC,CAAC;EAAA,GAAE,CAACH,UAAU,CAAC,CAAC,EAAE;IAAA,OAAMF,WAAW,CAACQ,UAAU,CAACX,OAAO,CAAC;EAAA,GAAE;IAAA,OAAMG,WAAW,CAACQ,UAAU,CAACX,OAAO,CAAC;EAAA,EAAC;AAC5N"},"metadata":{},"sourceType":"module","externalDependencies":[]}