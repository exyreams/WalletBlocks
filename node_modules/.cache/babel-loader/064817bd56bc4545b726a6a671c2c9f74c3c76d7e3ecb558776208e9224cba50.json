{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nvar DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nvar Session_1 = require(\"../relay/Session\");\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nvar util_1 = require(\"../util\");\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\nvar JSONRPC_1 = require(\"./JSONRPC\");\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n  var _super = _createSuper(CoinbaseWalletProvider);\n  function CoinbaseWalletProvider(options) {\n    var _this;\n    _classCallCheck(this, CoinbaseWalletProvider);\n    var _a, _b;\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._chainIdFromOpts = options.chainId;\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this.diagnostic = options.diagnosticLogger;\n    _this.reloadOnDisconnect = true;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    _this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    _this.qrUrl = options.qrUrl;\n    _this.supportsAddressSwitching = options.supportsAddressSwitching;\n    _this.isLedger = options.isLedger;\n    var chainId = _this.getChainId();\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n      // Used to verify the source and window are correct before proceeding\n      if (event.origin !== location.origin || event.source !== window) {\n        return;\n      }\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n      if (event.data.data.action === \"defaultChainChanged\" || event.data.data.action === \"dappChainSwitched\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n      }\n      if (event.data.data.action === \"addressChanged\") {\n        _this._setAddresses([event.data.data.address]);\n      }\n    });\n    return _this;\n  }\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      // backward compatibility\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"disableReloadOnDisconnect\",\n    value: function disableReloadOnDisconnect() {\n      this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n      if (!(this.isLedger || this.isCoinbaseBrowser)) {\n        this._chainIdFromOpts = chainId;\n        this._jsonRpcUrlFromOpts = jsonRpcUrl;\n      }\n      this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId) {\n      this.jsonRpcUrl = jsonRpcUrl;\n      // emit chainChanged event if necessary\n      var originalChainId = this.getChainId();\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image, chainId) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context.sent;\n              _context.next = 5;\n              return relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n            case 5:\n              result = _context.sent;\n              return _context.abrupt(\"return\", !!result.result);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function watchAsset(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              _context2.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context2.sent;\n              isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n              if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              _context2.next = 11;\n              return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n            case 11:\n              res = _context2.sent;\n              if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                this.updateProviderInfo(rpcUrls[0], chainId);\n              }\n              return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function addEthereumChain(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context3.sent;\n              _context3.next = 5;\n              return relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n            case 5:\n              res = _context3.sent;\n              if (!res.errorCode) {\n                _context3.next = 8;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode\n              });\n            case 8:\n              switchResponse = res.result;\n              if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n              }\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function switchEthereumChain(_x13) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::enable\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n            case 3:\n              _context4.next = 5;\n              return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n            case 5:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var relay;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context5.sent;\n              relay.resetAndReload();\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      }\n      // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      }\n      // send(JSONRPCRequest[]): JSONRPCResponse[]\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      }\n      // send(JSONRPCRequest): JSONRPCResponse\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function () {\n      var _sendAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, callback) {\n        var arrayCb, cb;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(typeof callback !== \"function\")) {\n                _context6.next = 2;\n                break;\n              }\n              throw new Error(\"callback is required\");\n            case 2:\n              if (!Array.isArray(request)) {\n                _context6.next = 6;\n                break;\n              }\n              arrayCb = callback;\n              this._sendMultipleRequestsAsync(request).then(function (responses) {\n                return arrayCb(null, responses);\n              }).catch(function (err) {\n                return arrayCb(err, null);\n              });\n              return _context6.abrupt(\"return\");\n            case 6:\n              // send(JSONRPCRequest, callback): void\n              cb = callback;\n              return _context6.abrupt(\"return\", this._sendRequestAsync(request).then(function (response) {\n                return cb(null, response);\n              }).catch(function (err) {\n                return cb(err, null);\n              }));\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function sendAsync(_x14, _x15) {\n        return _sendAsync.apply(this, arguments);\n      }\n      return sendAsync;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                _context7.next = 2;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n              });\n            case 2:\n              method = args.method, params = args.params;\n              if (!(typeof method !== \"string\" || method.length === 0)) {\n                _context7.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n              });\n            case 5:\n              if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                _context7.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n              });\n            case 7:\n              newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n              id = this._relayEventManager.makeRequestId();\n              _context7.next = 11;\n              return this._sendRequestAsync({\n                method: method,\n                params: newParams,\n                jsonrpc: \"2.0\",\n                id: id\n              });\n            case 11:\n              result = _context7.sent;\n              return _context7.abrupt(\"return\", result.result);\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function request(_x16) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(match) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context8.sent;\n              _context8.next = 5;\n              return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n            case 5:\n              res = _context8.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context8.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context8.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function scanQRCode(_x17) {\n        return _scanQRCode.apply(this, arguments);\n      }\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(data, action) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context9.sent;\n              _context9.next = 5;\n              return relay.genericRequest(data, action).promise;\n            case 5:\n              res = _context9.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context9.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context9.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function genericRequest(_x18, _x19) {\n        return _genericRequest.apply(this, arguments);\n      }\n      return genericRequest;\n    }()\n  }, {\n    key: \"selectProvider\",\n    value: function () {\n      var _selectProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(providerOptions) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context10.sent;\n              _context10.next = 5;\n              return relay.selectProvider(providerOptions).promise;\n            case 5:\n              res = _context10.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context10.next = 8;\n                break;\n              }\n              throw new Error(\"result was not a string\");\n            case 8:\n              return _context10.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function selectProvider(_x20) {\n        return _selectProvider.apply(this, arguments);\n      }\n      return selectProvider;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses, isDisconnect) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n      if (this._addresses.length > 0 && this.supportsAddressSwitching === false && !isDisconnect) {\n        /**\n         * The extension currently doesn't support switching selected wallet index\n         * make sure walletlink doesn't update it's address in this case\n         */\n        return;\n      }\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              method = request.method;\n              params = request.params || [];\n              _context11.t0 = method;\n              _context11.next = _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n              break;\n            case 5:\n              return _context11.abrupt(\"return\", this._eth_requestAccounts());\n            case 6:\n              return _context11.abrupt(\"return\", this._eth_sign(params));\n            case 7:\n              return _context11.abrupt(\"return\", this._eth_ecRecover(params));\n            case 8:\n              return _context11.abrupt(\"return\", this._personal_sign(params));\n            case 9:\n              return _context11.abrupt(\"return\", this._personal_ecRecover(params));\n            case 10:\n              return _context11.abrupt(\"return\", this._eth_signTransaction(params));\n            case 11:\n              return _context11.abrupt(\"return\", this._eth_sendRawTransaction(params));\n            case 12:\n              return _context11.abrupt(\"return\", this._eth_sendTransaction(params));\n            case 13:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v1(params));\n            case 14:\n              return _context11.abrupt(\"return\", this._throwUnsupportedMethodError());\n            case 15:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v3(params));\n            case 16:\n              return _context11.abrupt(\"return\", this._eth_signTypedData_v4(params));\n            case 17:\n              return _context11.abrupt(\"return\", this._cbwallet_arbitrary(params));\n            case 18:\n              return _context11.abrupt(\"return\", this._wallet_addEthereumChain(params));\n            case 19:\n              return _context11.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n            case 20:\n              return _context11.abrupt(\"return\", this._wallet_watchAsset(params));\n            case 21:\n              _context11.next = 23;\n              return this.initializeRelay();\n            case 23:\n              relay = _context11.sent;\n              return _context11.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n            case 25:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function _handleAsynchronousMethods(_x21) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var addressStr = (0, util_1.ensureAddressString)(addressString);\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        return lowercaseAddresses.includes(addressStr);\n      } catch (_a) {}\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n      this._ensureKnownAddress(fromAddress);\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              this._ensureKnownAddress(address);\n              _context12.prev = 1;\n              _context12.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context12.sent;\n              _context12.next = 7;\n              return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            case 7:\n              res = _context12.sent;\n              return _context12.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 11:\n              _context12.prev = 11;\n              _context12.t0 = _context12[\"catch\"](1);\n              if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                _context12.next = 15;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            case 15:\n              throw _context12.t0;\n            case 16:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this, [[1, 11]]);\n      }));\n      function _signEthereumMessage(_x22, _x23, _x24, _x25) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context13.sent;\n              _context13.next = 5;\n              return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n            case 5:\n              res = _context13.sent;\n              return _context13.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _ethereumAddressFromSignedMessage(_x26, _x27, _x28) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n      if (!chainIdStr) {\n        return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n      }\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14() {\n        var _a, res, relay;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::_eth_requestAccounts\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context14.next = 3;\n                break;\n              }\n              return _context14.abrupt(\"return\", Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              }));\n            case 3:\n              _context14.prev = 3;\n              _context14.next = 6;\n              return this.initializeRelay();\n            case 6:\n              relay = _context14.sent;\n              _context14.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              res = _context14.sent;\n              _context14.next = 17;\n              break;\n            case 12:\n              _context14.prev = 12;\n              _context14.t0 = _context14[\"catch\"](3);\n              if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                _context14.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            case 16:\n              throw _context14.t0;\n            case 17:\n              if (res.result) {\n                _context14.next = 19;\n                break;\n              }\n              throw new Error(\"accounts received is empty\");\n            case 19:\n              this._setAddresses(res.result);\n              if (this.isLedger || this.isCoinbaseBrowser) {\n                _context14.next = 23;\n                break;\n              }\n              _context14.next = 23;\n              return this.switchEthereumChain(this.getChainId());\n            case 23:\n              return _context14.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              });\n            case 24:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this, [[3, 12]]);\n      }));\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context15.prev = 2;\n              _context15.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context15.sent;\n              _context15.next = 8;\n              return relay.signEthereumTransaction(tx).promise;\n            case 8:\n              res = _context15.sent;\n              return _context15.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context15.prev = 12;\n              _context15.t0 = _context15[\"catch\"](2);\n              if (!(typeof _context15.t0.message === \"string\" && _context15.t0.message.match(/(denied|rejected)/i))) {\n                _context15.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context15.t0;\n            case 17:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this, [[2, 12]]);\n      }));\n      function _eth_signTransaction(_x29) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n              _context16.next = 3;\n              return this.initializeRelay();\n            case 3:\n              relay = _context16.sent;\n              _context16.next = 6;\n              return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n            case 6:\n              res = _context16.sent;\n              return _context16.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 8:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function _eth_sendRawTransaction(_x30) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context17.prev = 2;\n              _context17.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context17.sent;\n              _context17.next = 8;\n              return relay.signAndSubmitEthereumTransaction(tx).promise;\n            case 8:\n              res = _context17.sent;\n              return _context17.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context17.prev = 12;\n              _context17.t0 = _context17[\"catch\"](2);\n              if (!(typeof _context17.t0.message === \"string\" && _context17.t0.message.match(/(denied|rejected)/i))) {\n                _context17.next = 16;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context17.t0;\n            case 17:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this, [[2, 12]]);\n      }));\n      function _eth_sendTransaction(_x31) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              this._requireAuthorization();\n              typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n              address = (0, util_1.ensureAddressString)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context18.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _eth_signTypedData_v1(_x32) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context19.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function _eth_signTypedData_v3(_x33) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context20.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function _eth_signTypedData_v4(_x34) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n      return _eth_signTypedData_v4;\n    }() /** @deprecated */\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              action = params[0];\n              data = params[1];\n              if (!(typeof data !== \"string\")) {\n                _context21.next = 4;\n                break;\n              }\n              throw new Error(\"parameter must be a string\");\n            case 4:\n              if (!(typeof action !== \"object\" || action === null)) {\n                _context21.next = 6;\n                break;\n              }\n              throw new Error(\"parameter must be an object\");\n            case 6:\n              _context21.next = 8;\n              return this.genericRequest(action, data);\n            case 8:\n              result = _context21.sent;\n              return _context21.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: result\n              });\n            case 10:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function _cbwallet_arbitrary(_x35) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              request = params[0];\n              if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                _context22.next = 3;\n                break;\n              }\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"please pass in at least 1 rpcUrl\"\n                }\n              });\n            case 3:\n              if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                _context22.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\"\n              });\n            case 5:\n              if (request.nativeCurrency) {\n                _context22.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\"\n              });\n            case 7:\n              chainIdNumber = parseInt(request.chainId, 16);\n              _context22.next = 10;\n              return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n            case 10:\n              success = _context22.sent;\n              if (!success) {\n                _context22.next = 15;\n                break;\n              }\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 15:\n              return _context22.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"unable to add ethereum chain\"\n                }\n              });\n            case 16:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function _wallet_addEthereumChain(_x36) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              request = params[0];\n              _context23.next = 3;\n              return this.switchEthereumChain(parseInt(request.chainId, 16));\n            case 3:\n              return _context23.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function _wallet_switchEthereumChain(_x37) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(params) {\n        var request, chainId, _request$options, address, symbol, image, decimals, res;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              request = Array.isArray(params) ? params[0] : params;\n              if (request.type) {\n                _context24.next = 3;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Type is required\"\n              });\n            case 3:\n              if (!((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\")) {\n                _context24.next = 5;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Asset of type '\".concat(request.type, \"' is not supported\")\n              });\n            case 5:\n              if (request === null || request === void 0 ? void 0 : request.options) {\n                _context24.next = 7;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Options are required\"\n              });\n            case 7:\n              if (request === null || request === void 0 ? void 0 : request.options.address) {\n                _context24.next = 9;\n                break;\n              }\n              throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Address is required\"\n              });\n            case 9:\n              chainId = this.getChainId();\n              _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n              _context24.next = 13;\n              return this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n            case 13:\n              res = _context24.sent;\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res\n              });\n            case 15:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function _wallet_watchAsset(_x38) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              param = params[0];\n              _context25.next = 3;\n              return this._filterPolyfill.newFilter(param);\n            case 3:\n              filterId = _context25.sent;\n              return _context25.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 5:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function _eth_newFilter(_x39) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this._filterPolyfill.newBlockFilter();\n            case 2:\n              filterId = _context26.sent;\n              return _context26.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return this._filterPolyfill.newPendingTransactionFilter();\n            case 2:\n              filterId = _context27.sent;\n              return _context27.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts, isDisconnect) {\n          return _this5._setAddresses(accounts, isDisconnect);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n        });\n        relay.setDappDefaultChainCallback(_this5._chainIdFromOpts);\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["_toConsumableArray","require","default","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","__importDefault","mod","__esModule","Object","defineProperty","exports","value","CoinbaseWalletProvider","safe_event_emitter_1","bn_js_1","eth_rpc_errors_1","DiagnosticLogger_1","Session_1","WalletSDKRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","_safe_event_emitter_","_super","options","_this","_a","_b","call","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_chainIdFromOpts","chainId","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","diagnostic","diagnosticLogger","reloadOnDisconnect","isCoinbaseWallet","overrideIsCoinbaseWallet","isCoinbaseBrowser","overrideIsCoinbaseBrowser","qrUrl","supportsAddressSwitching","isLedger","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","origin","location","source","action","_chainId","Number","key","get","undefined","isConnected","set","setItem","disableReloadOnDisconnect","originalChainId","chainChanged","ensureIntNumber","_watchAsset","mark","_callee","symbol","decimals","image","relay","result","wrap","_callee$","_context","prev","next","sent","watchAsset","promise","abrupt","stop","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","_addEthereumChain","_callee2","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","isWhitelistedNetworkOrStandalone","res","_callee2$","_context2","inlineAddEthereumChain","_isAuthorized","requestEthereumAccounts","addEthereumChain","isApproved","_x7","_x8","_x9","_x10","_x11","_x12","_switchEthereumChain","_callee3","switchResponse","_callee3$","_context3","switchEthereumChain","selectedAddress","errorCode","ethErrors","provider","custom","code","rpcUrl","_x13","appName","appLogoUrl","then","_enable","_callee4","_callee4$","_context4","log","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","_close","_callee5","_callee5$","_context5","resetAndReload","requestOrMethod","callbackOrParams","_this2","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","_callee6","arrayCb","cb","_callee6$","_context6","Error","_sendMultipleRequestsAsync","responses","catch","err","response","_x14","_x15","_request2","_callee7","args","newParams","_callee7$","_context7","rpc","invalidRequest","message","makeRequestId","_x16","_scanQRCode","_callee8","match","_callee8$","_context8","ensureRegExpString","_x17","_genericRequest","_callee9","_callee9$","_context9","_x18","_x19","_selectProvider","_callee10","providerOptions","_callee10$","_context10","selectProvider","_x20","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","concat","isDisconnect","newAddresses","JSON","stringify","join","_this3","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","_this4","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_handleAsynchronousMethods2","_callee11","_callee11$","_context11","t0","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","cbWallet_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_cbwallet_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","_x21","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","addressStr","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBN","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage2","_callee12","addPrefix","typedDataJson","_callee12$","_context12","signEthereumMessage","userRejectedRequest","_signEthereumMessage","_x22","_x23","_x24","_x25","_ethereumAddressFromSignedMessage2","_callee13","signature","_callee13$","_context13","ethereumAddressFromSignedMessage","_ethereumAddressFromSignedMessage","_x26","_x27","_x28","hexStringFromIntNumber","parseInt","_eth_requestAccounts2","_callee14","_callee14$","_context14","_eth_signTransaction2","_callee15","_callee15$","_context15","signEthereumTransaction","_x29","_eth_sendRawTransaction2","_callee16","signedTransaction","_callee16$","_context16","submitEthereumTransaction","_x30","_eth_sendTransaction2","_callee17","_callee17$","_context17","signAndSubmitEthereumTransaction","_x31","_eth_signTypedData_v","_callee18","typedData","typedDataJSON","_callee18$","_context18","ensureParsedJSONObject","hashForSignTypedDataLegacy","_x32","_eth_signTypedData_v2","_callee19","_callee19$","_context19","hashForSignTypedData_v3","_x33","_eth_signTypedData_v5","_callee20","_callee20$","_context20","hashForSignTypedData_v4","_x34","_cbwallet_arbitrary2","_callee21","_callee21$","_context21","_x35","_wallet_addEthereumChain2","_callee22","_c","_d","chainIdNumber","success","_callee22$","_context22","error","trim","_x36","_wallet_switchEthereumChain2","_callee23","_callee23$","_context23","_x37","_wallet_watchAsset2","_callee24","_request$options","_callee24$","_context24","invalidParams","_x38","filterId","ensureHexString","uninstallFilter","_eth_newFilter2","_callee25","param","_callee25$","_context25","newFilter","_x39","_eth_newBlockFilter2","_callee26","_callee26$","_context26","newBlockFilter","_eth_newPendingTransactionFilter2","_callee27","_callee27$","_context27","newPendingTransactionFilter","getFilterChanges","getFilterLogs","_this5","setAccountsCallback","accounts","setChainCallback","setDappDefaultChainCallback"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a, _b;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._chainIdFromOpts = options.chainId;\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this.reloadOnDisconnect = true;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this.qrUrl = options.qrUrl;\n        this.supportsAddressSwitching = options.supportsAddressSwitching;\n        this.isLedger = options.isLedger;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params,\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            // Used to verify the source and window are correct before proceeding\n            if (event.origin !== location.origin || event.source !== window) {\n                return;\n            }\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"defaultChainChanged\" ||\n                event.data.data.action === \"dappChainSwitched\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n            }\n            if (event.data.data.action === \"addressChanged\") {\n                this._setAddresses([event.data.data.address]);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        // backward compatibility\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    disableReloadOnDisconnect() {\n        this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n    setProviderInfo(jsonRpcUrl, chainId) {\n        // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            this._chainIdFromOpts = chainId;\n            this._jsonRpcUrlFromOpts = jsonRpcUrl;\n        }\n        this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n    updateProviderInfo(jsonRpcUrl, chainId) {\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this.updateProviderInfo(rpcUrls[0], chainId);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode,\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    async close() {\n        const relay = await this.initializeRelay();\n        relay.resetAndReload();\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params,\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    async sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        return this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id,\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async selectProvider(providerOptions) {\n        const relay = await this.initializeRelay();\n        const res = await relay.selectProvider(providerOptions).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id,\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses, isDisconnect) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        if (this._addresses.length > 0 &&\n            this.supportsAddressSwitching === false &&\n            !isDisconnect) {\n            /**\n             * The extension currently doesn't support switching selected wallet index\n             * make sure walletlink doesn't update it's address in this case\n             */\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result,\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null\n            ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas)\n            : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (!chainIdStr) {\n            return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n        }\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            await this.switchEthereumChain(this.getChainId());\n        }\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    /** @deprecated */\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\",\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\",\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` },\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Type is required\",\n            });\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' is not supported`,\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Options are required\",\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Address is required\",\n            });\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n            });\n            relay.setDappDefaultChainCallback(this._chainIdFromOpts);\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}