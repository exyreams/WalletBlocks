{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _regeneratorRuntime = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nvar types_1 = require(\"../types\");\nvar util_1 = require(\"../util\");\nvar TIMEOUT = 5 * 60 * 1000; // 5 minutes\nvar JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\nvar FilterPolyfill = /*#__PURE__*/function () {\n  function FilterPolyfill(provider) {\n    _classCallCheck(this, FilterPolyfill);\n    this.logFilters = new Map(); // <id, filter>\n    this.blockFilters = new Set(); // <id>\n    this.pendingTransactionFilters = new Set(); // <id, true>\n    this.cursors = new Map(); // <id, cursor>\n    this.timeouts = new Map(); // <id, setTimeout id>\n    this.nextFilterId = (0, types_1.IntNumber)(1);\n    this.provider = provider;\n  }\n  _createClass(FilterPolyfill, [{\n    key: \"newFilter\",\n    value: function () {\n      var _newFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(param) {\n        var filter, id, cursor;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              filter = filterFromParam(param);\n              id = this.makeFilterId();\n              _context.next = 4;\n              return this.setInitialCursorPosition(id, filter.fromBlock);\n            case 4:\n              cursor = _context.sent;\n              console.log(\"Installing new log filter(\".concat(id, \"):\"), filter, \"initial cursor position:\", cursor);\n              this.logFilters.set(id, filter);\n              this.setFilterTimeout(id);\n              return _context.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function newFilter(_x) {\n        return _newFilter.apply(this, arguments);\n      }\n      return newFilter;\n    }()\n  }, {\n    key: \"newBlockFilter\",\n    value: function () {\n      var _newBlockFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var id, cursor;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              id = this.makeFilterId();\n              _context2.next = 3;\n              return this.setInitialCursorPosition(id, \"latest\");\n            case 3:\n              cursor = _context2.sent;\n              console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n              this.blockFilters.add(id);\n              this.setFilterTimeout(id);\n              return _context2.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function newBlockFilter() {\n        return _newBlockFilter.apply(this, arguments);\n      }\n      return newBlockFilter;\n    }()\n  }, {\n    key: \"newPendingTransactionFilter\",\n    value: function () {\n      var _newPendingTransactionFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var id, cursor;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              id = this.makeFilterId();\n              _context3.next = 3;\n              return this.setInitialCursorPosition(id, \"latest\");\n            case 3:\n              cursor = _context3.sent;\n              console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n              this.pendingTransactionFilters.add(id);\n              this.setFilterTimeout(id);\n              return _context3.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function newPendingTransactionFilter() {\n        return _newPendingTransactionFilter.apply(this, arguments);\n      }\n      return newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"uninstallFilter\",\n    value: function uninstallFilter(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n      console.log(\"Uninstalling filter (\".concat(id, \")\"));\n      this.deleteFilter(id);\n      return true;\n    }\n  }, {\n    key: \"getFilterChanges\",\n    value: function getFilterChanges(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n      if (this.timeouts.has(id)) {\n        // extend timeout\n        this.setFilterTimeout(id);\n      }\n      if (this.logFilters.has(id)) {\n        return this.getLogFilterChanges(id);\n      } else if (this.blockFilters.has(id)) {\n        return this.getBlockFilterChanges(id);\n      } else if (this.pendingTransactionFilters.has(id)) {\n        return this.getPendingTransactionFilterChanges(id);\n      }\n      return Promise.resolve(filterNotFoundError());\n    }\n  }, {\n    key: \"getFilterLogs\",\n    value: function () {\n      var _getFilterLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(filterId) {\n        var id, filter;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              id = (0, util_1.intNumberFromHexString)(filterId);\n              filter = this.logFilters.get(id);\n              if (filter) {\n                _context4.next = 4;\n                break;\n              }\n              return _context4.abrupt(\"return\", filterNotFoundError());\n            case 4:\n              return _context4.abrupt(\"return\", this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                method: \"eth_getLogs\",\n                params: [paramFromFilter(filter)]\n              })));\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getFilterLogs(_x2) {\n        return _getFilterLogs.apply(this, arguments);\n      }\n      return getFilterLogs;\n    }()\n  }, {\n    key: \"makeFilterId\",\n    value: function makeFilterId() {\n      return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(request) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.provider.sendAsync(request, function (err, response) {\n          if (err) {\n            return reject(err);\n          }\n          if (Array.isArray(response) || response == null) {\n            return reject(new Error(\"unexpected response received: \".concat(JSON.stringify(response))));\n          }\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"deleteFilter\",\n    value: function deleteFilter(id) {\n      console.log(\"Deleting filter (\".concat(id, \")\"));\n      this.logFilters.delete(id);\n      this.blockFilters.delete(id);\n      this.pendingTransactionFilters.delete(id);\n      this.cursors.delete(id);\n      this.timeouts.delete(id);\n    }\n  }, {\n    key: \"getLogFilterChanges\",\n    value: function () {\n      var _getLogFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id) {\n        var filter, cursorPosition, currentBlockHeight, toBlock, response, blocks, highestBlock, newCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              filter = this.logFilters.get(id);\n              cursorPosition = this.cursors.get(id);\n              if (!(!cursorPosition || !filter)) {\n                _context5.next = 4;\n                break;\n              }\n              return _context5.abrupt(\"return\", filterNotFoundError());\n            case 4:\n              _context5.next = 6;\n              return this.getCurrentBlockHeight();\n            case 6:\n              currentBlockHeight = _context5.sent;\n              toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n              if (!(cursorPosition > currentBlockHeight)) {\n                _context5.next = 10;\n                break;\n              }\n              return _context5.abrupt(\"return\", emptyResult());\n            case 10:\n              if (!(cursorPosition > filter.toBlock)) {\n                _context5.next = 12;\n                break;\n              }\n              return _context5.abrupt(\"return\", emptyResult());\n            case 12:\n              console.log(\"Fetching logs from \".concat(cursorPosition, \" to \").concat(toBlock, \" for filter \").concat(id));\n              _context5.next = 15;\n              return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                method: \"eth_getLogs\",\n                params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n                  fromBlock: cursorPosition,\n                  toBlock: toBlock\n                }))]\n              }));\n            case 15:\n              response = _context5.sent;\n              if (Array.isArray(response.result)) {\n                blocks = response.result.map(function (log) {\n                  return (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\");\n                });\n                highestBlock = Math.max.apply(Math, _toConsumableArray(blocks));\n                if (highestBlock && highestBlock > cursorPosition) {\n                  newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                  console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                  this.cursors.set(id, newCursorPosition);\n                }\n              }\n              return _context5.abrupt(\"return\", response);\n            case 18:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getLogFilterChanges(_x3) {\n        return _getLogFilterChanges.apply(this, arguments);\n      }\n      return getLogFilterChanges;\n    }()\n  }, {\n    key: \"getBlockFilterChanges\",\n    value: function () {\n      var _getBlockFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(id) {\n        var _this2 = this;\n        var cursorPosition, currentBlockHeight, blocks, newCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              cursorPosition = this.cursors.get(id);\n              if (cursorPosition) {\n                _context6.next = 3;\n                break;\n              }\n              return _context6.abrupt(\"return\", filterNotFoundError());\n            case 3:\n              _context6.next = 5;\n              return this.getCurrentBlockHeight();\n            case 5:\n              currentBlockHeight = _context6.sent;\n              if (!(cursorPosition > currentBlockHeight)) {\n                _context6.next = 8;\n                break;\n              }\n              return _context6.abrupt(\"return\", emptyResult());\n            case 8:\n              console.log(\"Fetching blocks from \".concat(cursorPosition, \" to \").concat(currentBlockHeight, \" for filter (\").concat(id, \")\"));\n              _context6.next = 11;\n              return Promise.all(\n              // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n              (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(function (i) {\n                return _this2.getBlockHashByNumber((0, types_1.IntNumber)(i));\n              }));\n            case 11:\n              blocks = _context6.sent.filter(function (hash) {\n                return !!hash;\n              });\n              // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n              newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n              console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n              this.cursors.set(id, newCursorPosition);\n              return _context6.abrupt(\"return\", Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                result: blocks\n              }));\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getBlockFilterChanges(_x4) {\n        return _getBlockFilterChanges.apply(this, arguments);\n      }\n      return getBlockFilterChanges;\n    }()\n  }, {\n    key: \"getPendingTransactionFilterChanges\",\n    value: function () {\n      var _getPendingTransactionFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_id) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", Promise.resolve(emptyResult()));\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }));\n      function getPendingTransactionFilterChanges(_x5) {\n        return _getPendingTransactionFilterChanges.apply(this, arguments);\n      }\n      return getPendingTransactionFilterChanges;\n    }()\n  }, {\n    key: \"setInitialCursorPosition\",\n    value: function () {\n      var _setInitialCursorPosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(id, startBlock) {\n        var currentBlockHeight, initialCursorPosition;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.getCurrentBlockHeight();\n            case 2:\n              currentBlockHeight = _context8.sent;\n              initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n              this.cursors.set(id, initialCursorPosition);\n              return _context8.abrupt(\"return\", initialCursorPosition);\n            case 6:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function setInitialCursorPosition(_x6, _x7) {\n        return _setInitialCursorPosition.apply(this, arguments);\n      }\n      return setInitialCursorPosition;\n    }()\n  }, {\n    key: \"setFilterTimeout\",\n    value: function setFilterTimeout(id) {\n      var _this3 = this;\n      var existing = this.timeouts.get(id);\n      if (existing) {\n        window.clearTimeout(existing);\n      }\n      var timeout = window.setTimeout(function () {\n        console.log(\"Filter (\".concat(id, \") timed out\"));\n        _this3.deleteFilter(id);\n      }, TIMEOUT);\n      this.timeouts.set(id, timeout);\n    }\n  }, {\n    key: \"getCurrentBlockHeight\",\n    value: function () {\n      var _getCurrentBlockHeight = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var _yield$this$sendAsync, result;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                method: \"eth_blockNumber\",\n                params: []\n              }));\n            case 2:\n              _yield$this$sendAsync = _context9.sent;\n              result = _yield$this$sendAsync.result;\n              return _context9.abrupt(\"return\", (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result)));\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function getCurrentBlockHeight() {\n        return _getCurrentBlockHeight.apply(this, arguments);\n      }\n      return getCurrentBlockHeight;\n    }()\n  }, {\n    key: \"getBlockHashByNumber\",\n    value: function () {\n      var _getBlockHashByNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(blockNumber) {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                method: \"eth_getBlockByNumber\",\n                params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false]\n              }));\n            case 2:\n              response = _context10.sent;\n              if (!(response.result && typeof response.result.hash === \"string\")) {\n                _context10.next = 5;\n                break;\n              }\n              return _context10.abrupt(\"return\", (0, util_1.ensureHexString)(response.result.hash));\n            case 5:\n              return _context10.abrupt(\"return\", null);\n            case 6:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getBlockHashByNumber(_x8) {\n        return _getBlockHashByNumber.apply(this, arguments);\n      }\n      return getBlockHashByNumber;\n    }()\n  }]);\n  return FilterPolyfill;\n}();\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n  var param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n  return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return (0, types_1.IntNumber)(0);\n  } else if ((0, util_1.isHexString)(value)) {\n    return (0, util_1.intNumberFromHexString)(value);\n  }\n  throw new Error(\"Invalid block option: \".concat(String(value)));\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n  return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"names":["_toConsumableArray","require","default","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","key","_newFilter","mark","_callee","param","filter","cursor","wrap","_callee$","_context","prev","next","makeFilterId","setInitialCursorPosition","fromBlock","sent","console","log","concat","set","setFilterTimeout","abrupt","hexStringFromIntNumber","stop","newFilter","_x","apply","arguments","_newBlockFilter","_callee2","_callee2$","_context2","add","newBlockFilter","_newPendingTransactionFilter","_callee3","_callee3$","_context3","newPendingTransactionFilter","uninstallFilter","filterId","intNumberFromHexString","deleteFilter","getFilterChanges","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","_getFilterLogs","_callee4","_callee4$","_context4","get","sendAsyncPromise","assign","method","params","paramFromFilter","getFilterLogs","_x2","request","_this","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","_getLogFilterChanges","_callee5","cursorPosition","currentBlockHeight","toBlock","blocks","highestBlock","newCursorPosition","_callee5$","_context5","getCurrentBlockHeight","emptyResult","result","map","blockNumber","Math","max","_x3","_getBlockFilterChanges","_callee6","_this2","_callee6$","_context6","all","range","i","getBlockHashByNumber","hash","length","_x4","_getPendingTransactionFilterChanges","_callee7","_id","_callee7$","_context7","_x5","_setInitialCursorPosition","_callee8","startBlock","initialCursorPosition","_callee8$","_context8","_x6","_x7","_this3","existing","window","clearTimeout","timeout","setTimeout","_getCurrentBlockHeight","_callee9","_yield$this$sendAsync","_callee9$","_context9","ensureHexString","_getBlockHashByNumber","_callee10","_callee10$","_context10","_x8","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","String","error","code","message"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/@coinbase/wallet-sdk/dist/provider/FilterPolyfill.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0,\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = (0, types_1.IntNumber)(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    uninstallFilter(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock })),\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return (0, util_1.ensureHexString)(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || [],\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics,\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return (0, types_1.IntNumber)(0);\n    }\n    else if ((0, util_1.isHexString)(value)) {\n        return (0, util_1.intNumberFromHexString)(value);\n    }\n    throw new Error(`Invalid block option: ${String(value)}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}