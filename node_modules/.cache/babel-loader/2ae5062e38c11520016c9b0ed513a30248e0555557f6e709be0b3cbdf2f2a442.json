{"ast":null,"code":"var _regeneratorRuntime = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _classCallCheck = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _get = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"D:/Projects/RainbowKit/connectwallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar EthQuery = require('eth-query');\nvar pify = require('pify');\nvar SafeEventEmitter = require('safe-event-emitter');\nvar sec = 1000;\nvar calculateSum = function calculateSum(accumulator, currentValue) {\n  return accumulator + currentValue;\n};\nvar blockTrackerEvents = ['sync', 'latest'];\nvar BaseBlockTracker = /*#__PURE__*/function (_SafeEventEmitter) {\n  \"use strict\";\n\n  _inherits(BaseBlockTracker, _SafeEventEmitter);\n  var _super = _createSuper(BaseBlockTracker);\n  //\n  // public\n  //\n\n  function BaseBlockTracker() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, BaseBlockTracker);\n    _this = _super.call(this);\n    // config\n    _this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n    // state\n    _this._blockResetTimeout;\n    _this._currentBlock = null;\n    _this._isRunning = false;\n    // bind functions for internal use\n    _this._onNewListener = _this._onNewListener.bind(_assertThisInitialized(_this));\n    _this._onRemoveListener = _this._onRemoveListener.bind(_assertThisInitialized(_this));\n    _this._resetCurrentBlock = _this._resetCurrentBlock.bind(_assertThisInitialized(_this));\n    // listen for handler changes\n    _this._setupInternalEvents();\n    return _this;\n  }\n  _createClass(BaseBlockTracker, [{\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this._isRunning;\n    }\n  }, {\n    key: \"getCurrentBlock\",\n    value: function getCurrentBlock() {\n      return this._currentBlock;\n    }\n  }, {\n    key: \"getLatestBlock\",\n    value: function () {\n      var _getLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n        var latestBlock;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this._currentBlock) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this._currentBlock);\n            case 2:\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                return _this2.once('latest', resolve);\n              });\n            case 4:\n              latestBlock = _context.sent;\n              return _context.abrupt(\"return\", latestBlock);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getLatestBlock() {\n        return _getLatestBlock.apply(this, arguments);\n      }\n      return getLatestBlock;\n    }() // dont allow module consumer to remove our internal event listeners\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      // perform default behavior, preserve fn arity\n      if (eventName) {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this, eventName);\n      } else {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this);\n      }\n      // re-add internal events\n      this._setupInternalEvents();\n      // trigger stop check just in case\n      this._onRemoveListener();\n    }\n\n    //\n    // to be implemented in subclass\n    //\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      // default behavior is noop\n    }\n  }, {\n    key: \"_end\",\n    value: function _end() {\n      // default behavior is noop\n    }\n\n    //\n    // private\n    //\n  }, {\n    key: \"_setupInternalEvents\",\n    value: function _setupInternalEvents() {\n      // first remove listeners for idempotence\n      this.removeListener('newListener', this._onNewListener);\n      this.removeListener('removeListener', this._onRemoveListener);\n      // then add them\n      this.on('newListener', this._onNewListener);\n      this.on('removeListener', this._onRemoveListener);\n    }\n  }, {\n    key: \"_onNewListener\",\n    value: function _onNewListener(eventName, handler) {\n      // `newListener` is called *before* the listener is added\n      if (!blockTrackerEvents.includes(eventName)) return;\n      this._maybeStart();\n    }\n  }, {\n    key: \"_onRemoveListener\",\n    value: function _onRemoveListener(eventName, handler) {\n      // `removeListener` is called *after* the listener is removed\n      if (this._getBlockTrackerEventCount() > 0) return;\n      this._maybeEnd();\n    }\n  }, {\n    key: \"_maybeStart\",\n    value: function _maybeStart() {\n      if (this._isRunning) return;\n      this._isRunning = true;\n      // cancel setting latest block to stale\n      this._cancelBlockResetTimeout();\n      this._start();\n    }\n  }, {\n    key: \"_maybeEnd\",\n    value: function _maybeEnd() {\n      if (!this._isRunning) return;\n      this._isRunning = false;\n      this._setupBlockResetTimeout();\n      this._end();\n    }\n  }, {\n    key: \"_getBlockTrackerEventCount\",\n    value: function _getBlockTrackerEventCount() {\n      var _this3 = this;\n      return blockTrackerEvents.map(function (eventName) {\n        return _this3.listenerCount(eventName);\n      }).reduce(calculateSum);\n    }\n  }, {\n    key: \"_newPotentialLatest\",\n    value: function _newPotentialLatest(newBlock) {\n      var currentBlock = this._currentBlock;\n      // only update if blok number is higher\n      if (currentBlock && hexToInt(newBlock) <= hexToInt(currentBlock)) return;\n      this._setCurrentBlock(newBlock);\n    }\n  }, {\n    key: \"_setCurrentBlock\",\n    value: function _setCurrentBlock(newBlock) {\n      var oldBlock = this._currentBlock;\n      this._currentBlock = newBlock;\n      this.emit('latest', newBlock);\n      this.emit('sync', {\n        oldBlock: oldBlock,\n        newBlock: newBlock\n      });\n    }\n  }, {\n    key: \"_setupBlockResetTimeout\",\n    value: function _setupBlockResetTimeout() {\n      // clear any existing timeout\n      this._cancelBlockResetTimeout();\n      // clear latest block when stale\n      this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n      // nodejs - dont hold process open\n      if (this._blockResetTimeout.unref) {\n        this._blockResetTimeout.unref();\n      }\n    }\n  }, {\n    key: \"_cancelBlockResetTimeout\",\n    value: function _cancelBlockResetTimeout() {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }, {\n    key: \"_resetCurrentBlock\",\n    value: function _resetCurrentBlock() {\n      this._currentBlock = null;\n    }\n  }]);\n  return BaseBlockTracker;\n}(SafeEventEmitter);\nmodule.exports = BaseBlockTracker;\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16);\n}","map":{"version":3,"names":["EthQuery","require","pify","SafeEventEmitter","sec","calculateSum","accumulator","currentValue","blockTrackerEvents","BaseBlockTracker","_SafeEventEmitter","_inherits","_super","_createSuper","_this","opts","arguments","length","undefined","_classCallCheck","call","_blockResetDuration","blockResetDuration","_blockResetTimeout","_currentBlock","_isRunning","_onNewListener","bind","_assertThisInitialized","_onRemoveListener","_resetCurrentBlock","_setupInternalEvents","_createClass","key","value","isRunning","getCurrentBlock","_getLatestBlock","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this2","latestBlock","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","once","sent","stop","getLatestBlock","apply","removeAllListeners","eventName","_get","_getPrototypeOf","prototype","_start","_end","removeListener","on","handler","includes","_maybeStart","_getBlockTrackerEventCount","_maybeEnd","_cancelBlockResetTimeout","_setupBlockResetTimeout","_this3","map","listenerCount","reduce","_newPotentialLatest","newBlock","currentBlock","hexToInt","_setCurrentBlock","oldBlock","emit","setTimeout","unref","clearTimeout","module","exports","hexInt","Number","parseInt"],"sources":["D:/Projects/RainbowKit/connectwallet/node_modules/eth-block-tracker/src/base.js"],"sourcesContent":["const EthQuery = require('eth-query')\nconst pify = require('pify')\nconst SafeEventEmitter = require('safe-event-emitter')\n\nconst sec = 1000\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue\nconst blockTrackerEvents = ['sync', 'latest']\n\nclass BaseBlockTracker extends SafeEventEmitter {\n\n  //\n  // public\n  //\n\n  constructor (opts = {}) {\n    super()\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec\n    // state\n    this._blockResetTimeout\n    this._currentBlock = null\n    this._isRunning = false\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this)\n    this._onRemoveListener = this._onRemoveListener.bind(this)\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this)\n    // listen for handler changes\n    this._setupInternalEvents()\n  }\n\n  isRunning () {\n    return this._isRunning\n  }\n\n  getCurrentBlock () {\n    return this._currentBlock\n  }\n\n  async getLatestBlock () {\n    // return if available\n    if (this._currentBlock) return this._currentBlock\n    // wait for a new latest block\n    const latestBlock = await new Promise(resolve => this.once('latest', resolve))\n    // return newly set current block\n    return latestBlock\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners (eventName) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName)\n    } else {\n      super.removeAllListeners()\n    }\n    // re-add internal events\n    this._setupInternalEvents()\n    // trigger stop check just in case\n    this._onRemoveListener()\n  }\n\n  //\n  // to be implemented in subclass\n  //\n\n  _start () {\n    // default behavior is noop\n  }\n\n  _end () {\n    // default behavior is noop\n  }\n\n  //\n  // private\n  //\n\n  _setupInternalEvents () {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener)\n    this.removeListener('removeListener', this._onRemoveListener)\n    // then add them\n    this.on('newListener', this._onNewListener)\n    this.on('removeListener', this._onRemoveListener)\n  }\n\n  _onNewListener (eventName, handler) {\n    // `newListener` is called *before* the listener is added\n    if (!blockTrackerEvents.includes(eventName)) return\n    this._maybeStart()\n  }\n\n  _onRemoveListener (eventName, handler) {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) return\n    this._maybeEnd()\n  }\n\n  _maybeStart () {\n    if (this._isRunning) return\n    this._isRunning = true\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout()\n    this._start()\n  }\n\n  _maybeEnd () {\n    if (!this._isRunning) return\n    this._isRunning = false\n    this._setupBlockResetTimeout()\n    this._end()\n  }\n\n  _getBlockTrackerEventCount () {\n    return blockTrackerEvents\n      .map(eventName => this.listenerCount(eventName))\n      .reduce(calculateSum)\n  }\n\n  _newPotentialLatest (newBlock) {\n    const currentBlock = this._currentBlock\n    // only update if blok number is higher\n    if (currentBlock && (hexToInt(newBlock) <= hexToInt(currentBlock))) return\n    this._setCurrentBlock(newBlock)\n  }\n\n  _setCurrentBlock (newBlock) {\n    const oldBlock = this._currentBlock\n    this._currentBlock = newBlock\n    this.emit('latest', newBlock)\n    this.emit('sync', { oldBlock, newBlock })\n  }\n\n  _setupBlockResetTimeout () {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout()\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration)\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref()\n    }\n  }\n\n  _cancelBlockResetTimeout () {\n    clearTimeout(this._blockResetTimeout)\n  }\n\n  _resetCurrentBlock () {\n    this._currentBlock = null\n  }\n\n}\n\nmodule.exports = BaseBlockTracker\n\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}